# For a custom request you need to specify a profile (with weighting=custom) but on import we don't need this
# profile: car

# The formula is defined in CustomWeighting, where the speed_factor can be used to decrease speed.
# The minimum value is 0 and the maximum is 1. If two conditions are satisfied the values are
# multiplied e.g. if road_class==MOTORWAY and road_environment==TUNNEL, then the resulting speed is
# average_speed*0.85*0.9 except when you use first_match
speed_factor:
  road_environment == TUNNEL: 0.85
  # trucks should be a bit slower on certain road classes compared to the 'base' car
  road_class == MOTORWAY: 0.85
  road_class == PRIMARY: 0.9

# You can lower the average speed for certain conditions via this max_speed entry. The speed_factor is applied before
# this operation. See the following example that sets the maximum speed to 95km/h for motorways.
max_speed:
  road_class == MOTORWAY: 95
  road_class == RESIDENTIAL: 30
  road_environment == BRIDGE: 85

# Trucks are slower so limit all speed to this value. In km/h
# If none of the conditions in the map above apply use the fallback, if specified:
max_speed_fallback: 100

# This term changes the influence of the distance. I.e. longer roads get a higher cost.
# The distance_influence is independent of the edge properties and does not influence the ETA. The default is 70 (seconds/1km).
# Let's assume a route that takes 1000sec and is 10km long, then a value of 30 means that I would like to drive maximum 11km
# to reduce the travel time to 970sec or 12km to reduce it to 940sec.
distance_influence: 90

# Now we want to set a preference without changing the taken time. The default priority is 1 and does not change something.
# The minimum value is 0 (block access). A value lower than 1 will avoid it. Values higher than 1 are not allowed.
# To prefer a certain case you lower the priority of all other entries via the catch-all key "*",
# see the road_class entry where motorways are preferred. If two conditions are met the values will be multiplied.
priority:
  first_match:
    road_class == RESIDENTIAL: 0.4
    road_class != MOTORWAY: 0.9

  # and if you do not want that routes go over tracks just exclude them via
  # road_class==TRACK: 0
  # let's assume we transport gas: so NEVER go on restricted roads with hazmat==no
  hazmat == NO: 0
  # avoid destination-only roads
  # TODO include private and delivery only access for base car profile so that we can avoid it here, but not exclude it
  road_access == DESTINATION: 0.1
  # avoid turns if possible and links are one simple indication for that
  road_class_link: 0.5
  # avoid toll roads
  toll != NO: 0.5
  # avoid a certain area
  in_area_custom1: 0.5
  max_weight < 4.5: 0
  max_height < 3.8: 0
  max_width < 2.5: 0

areas:
  custom1:
    type: "Feature"
    geometry: { type: "Polygon", coordinates: [[[13.722, 51.053], [13.722, 51.055], [13.731, 51.055], [13.731, 51.053], [13.722, 51.053]]] }